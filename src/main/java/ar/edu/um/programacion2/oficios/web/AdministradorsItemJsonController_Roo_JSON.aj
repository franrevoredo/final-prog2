// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ar.edu.um.programacion2.oficios.web;

import ar.edu.um.programacion2.oficios.domain.Administrador;
import ar.edu.um.programacion2.oficios.service.api.AdministradorService;
import ar.edu.um.programacion2.oficios.web.AdministradorsItemJsonController;
import io.springlets.web.NotFoundException;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;
import org.springframework.web.util.UriComponents;

privileged aspect AdministradorsItemJsonController_Roo_JSON {
    
    declare @type: AdministradorsItemJsonController: @RestController;
    
    declare @type: AdministradorsItemJsonController: @RequestMapping(value = "/administradors/{administrador}", name = "AdministradorsItemJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param administradorService
     */
    @Autowired
    public AdministradorsItemJsonController.new(AdministradorService administradorService) {
        this.administradorService = administradorService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Administrador
     */
    @ModelAttribute
    public Administrador AdministradorsItemJsonController.getAdministrador(@PathVariable("administrador") Long id) {
        Administrador administrador = administradorService.findOne(id);
        if (administrador == null) {
            throw new NotFoundException(String.format("Administrador with identifier '%s' not found",id));
        }
        return administrador;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param administrador
     * @return ResponseEntity
     */
    @GetMapping(name = "show")
    public ResponseEntity<?> AdministradorsItemJsonController.show(@ModelAttribute Administrador administrador) {
        return ResponseEntity.ok(administrador);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param administrador
     * @return UriComponents
     */
    public static UriComponents AdministradorsItemJsonController.showURI(Administrador administrador) {
        return MvcUriComponentsBuilder
            .fromMethodCall(
                MvcUriComponentsBuilder.on(AdministradorsItemJsonController.class).show(administrador))
            .buildAndExpand(administrador.getId()).encode();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param storedAdministrador
     * @param administrador
     * @param result
     * @return ResponseEntity
     */
    @PutMapping(name = "update")
    public ResponseEntity<?> AdministradorsItemJsonController.update(@ModelAttribute Administrador storedAdministrador, @Valid @RequestBody Administrador administrador, BindingResult result) {
        
        if (result.hasErrors()) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body(result);
        }
        administrador.setId(storedAdministrador.getId());
        getAdministradorService().save(administrador);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param administrador
     * @return ResponseEntity
     */
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> AdministradorsItemJsonController.delete(@ModelAttribute Administrador administrador) {
        getAdministradorService().delete(administrador);
        return ResponseEntity.ok().build();
    }
    
}
