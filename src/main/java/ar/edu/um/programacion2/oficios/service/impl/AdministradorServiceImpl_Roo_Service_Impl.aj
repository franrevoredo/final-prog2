// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ar.edu.um.programacion2.oficios.service.impl;

import ar.edu.um.programacion2.oficios.domain.Administrador;
import ar.edu.um.programacion2.oficios.repository.AdministradorRepository;
import ar.edu.um.programacion2.oficios.service.impl.AdministradorServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect AdministradorServiceImpl_Roo_Service_Impl {
    
    declare @type: AdministradorServiceImpl: @Service;
    
    declare @type: AdministradorServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private AdministradorRepository AdministradorServiceImpl.administradorRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param administradorRepository
     */
    @Autowired
    public AdministradorServiceImpl.new(AdministradorRepository administradorRepository) {
        setAdministradorRepository(administradorRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return AdministradorRepository
     */
    public AdministradorRepository AdministradorServiceImpl.getAdministradorRepository() {
        return administradorRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param administradorRepository
     */
    public void AdministradorServiceImpl.setAdministradorRepository(AdministradorRepository administradorRepository) {
        this.administradorRepository = administradorRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param administrador
     */
    @Transactional
    public void AdministradorServiceImpl.delete(Administrador administrador) {
        getAdministradorRepository().delete(administrador);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Administrador> AdministradorServiceImpl.save(Iterable<Administrador> entities) {
        return getAdministradorRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void AdministradorServiceImpl.delete(Iterable<Long> ids) {
        List<Administrador> toDelete = getAdministradorRepository().findAll(ids);
        getAdministradorRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Administrador
     */
    @Transactional
    public Administrador AdministradorServiceImpl.save(Administrador entity) {
        return getAdministradorRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Administrador
     */
    public Administrador AdministradorServiceImpl.findOne(Long id) {
        return getAdministradorRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Administrador
     */
    public Administrador AdministradorServiceImpl.findOneForUpdate(Long id) {
        return getAdministradorRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Administrador> AdministradorServiceImpl.findAll(Iterable<Long> ids) {
        return getAdministradorRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Administrador> AdministradorServiceImpl.findAll() {
        return getAdministradorRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long AdministradorServiceImpl.count() {
        return getAdministradorRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Administrador> AdministradorServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getAdministradorRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Administrador> AdministradorServiceImpl.getEntityType() {
        return Administrador.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> AdministradorServiceImpl.getIdType() {
        return Long.class;
    }
    
}
