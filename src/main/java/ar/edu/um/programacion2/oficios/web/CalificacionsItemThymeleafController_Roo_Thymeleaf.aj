// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ar.edu.um.programacion2.oficios.web;

import ar.edu.um.programacion2.oficios.domain.Calificacion;
import ar.edu.um.programacion2.oficios.reference.TipoCalif;
import ar.edu.um.programacion2.oficios.service.api.CalificacionService;
import ar.edu.um.programacion2.oficios.web.CalificacionsItemThymeleafController;
import ar.edu.um.programacion2.oficios.web.CalificacionsItemThymeleafLinkFactory;
import io.springlets.web.NotFoundException;
import io.springlets.web.mvc.util.ControllerMethodLinkBuilderFactory;
import io.springlets.web.mvc.util.MethodLinkBuilderFactory;
import java.util.Arrays;
import java.util.Locale;
import javax.validation.Valid;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.MessageSource;
import org.springframework.context.i18n.LocaleContextHolder;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.WebDataBinder;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.InitBinder;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.util.UriComponents;

privileged aspect CalificacionsItemThymeleafController_Roo_Thymeleaf {
    
    declare @type: CalificacionsItemThymeleafController: @Controller;
    
    declare @type: CalificacionsItemThymeleafController: @RequestMapping(value = "/calificacions/{calificacion}", name = "CalificacionsItemThymeleafController", produces = MediaType.TEXT_HTML_VALUE);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private MessageSource CalificacionsItemThymeleafController.messageSource;
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private MethodLinkBuilderFactory<CalificacionsItemThymeleafController> CalificacionsItemThymeleafController.itemLink;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param calificacionService
     * @param messageSource
     * @param linkBuilder
     */
    @Autowired
    public CalificacionsItemThymeleafController.new(CalificacionService calificacionService, MessageSource messageSource, ControllerMethodLinkBuilderFactory linkBuilder) {
        setCalificacionService(calificacionService);
        setMessageSource(messageSource);
        setItemLink(linkBuilder.of(CalificacionsItemThymeleafController.class));
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return MessageSource
     */
    public MessageSource CalificacionsItemThymeleafController.getMessageSource() {
        return messageSource;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param messageSource
     */
    public void CalificacionsItemThymeleafController.setMessageSource(MessageSource messageSource) {
        this.messageSource = messageSource;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return MethodLinkBuilderFactory
     */
    public MethodLinkBuilderFactory<CalificacionsItemThymeleafController> CalificacionsItemThymeleafController.getItemLink() {
        return itemLink;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param itemLink
     */
    public void CalificacionsItemThymeleafController.setItemLink(MethodLinkBuilderFactory<CalificacionsItemThymeleafController> itemLink) {
        this.itemLink = itemLink;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @param locale
     * @param method
     * @return Calificacion
     */
    @ModelAttribute
    public Calificacion CalificacionsItemThymeleafController.getCalificacion(@PathVariable("calificacion") Long id, Locale locale, HttpMethod method) {
        Calificacion calificacion = null;
        if (HttpMethod.PUT.equals(method)) {
            calificacion = calificacionService.findOneForUpdate(id);
        } else {
            calificacion = calificacionService.findOne(id);
        }
        
        if (calificacion == null) {
            String message = messageSource.getMessage("error_NotFound", new Object[] {"Calificacion", id}, "The record couldn't be found", locale);
            throw new NotFoundException(message);
        }
        return calificacion;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param calificacion
     * @param model
     * @return ModelAndView
     */
    @GetMapping(name = "show")
    public ModelAndView CalificacionsItemThymeleafController.show(@ModelAttribute Calificacion calificacion, Model model) {
        model.addAttribute("calificacion", calificacion);
        return new ModelAndView("calificacions/show");
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param calificacion
     * @param model
     * @return ModelAndView
     */
    @GetMapping(value = "/inline", name = "showInline")
    public ModelAndView CalificacionsItemThymeleafController.showInline(@ModelAttribute Calificacion calificacion, Model model) {
        model.addAttribute("calificacion", calificacion);
        return new ModelAndView("calificacions/showInline :: inline-content");
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param dataBinder
     */
    @InitBinder("calificacion")
    public void CalificacionsItemThymeleafController.initCalificacionBinder(WebDataBinder dataBinder) {
        dataBinder.setDisallowedFields("id");
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param model
     */
    public void CalificacionsItemThymeleafController.populateFormats(Model model) {
        model.addAttribute("application_locale", LocaleContextHolder.getLocale().getLanguage());
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param model
     */
    public void CalificacionsItemThymeleafController.populateForm(Model model) {
        populateFormats(model);
        model.addAttribute("tipo", Arrays.asList(TipoCalif.values()));
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param calificacion
     * @param model
     * @return ModelAndView
     */
    @GetMapping(value = "/edit-form", name = "editForm")
    public ModelAndView CalificacionsItemThymeleafController.editForm(@ModelAttribute Calificacion calificacion, Model model) {
        populateForm(model);
        
        model.addAttribute("calificacion", calificacion);
        return new ModelAndView("calificacions/edit");
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param calificacion
     * @param version
     * @param concurrencyControl
     * @param result
     * @param model
     * @return ModelAndView
     */
    @PutMapping(name = "update")
    public ModelAndView CalificacionsItemThymeleafController.update(@Valid @ModelAttribute Calificacion calificacion, @RequestParam("version") Integer version, @RequestParam(value = "concurrency", required = false, defaultValue = "") String concurrencyControl, BindingResult result, Model model) {
        // Check if provided form contain errors
        if (result.hasErrors()) {
            populateForm(model);
            
            return new ModelAndView("calificacions/edit");
        }
        // Concurrency control
        Calificacion existingCalificacion = getCalificacionService().findOne(calificacion.getId());
        if(calificacion.getVersion() != existingCalificacion.getVersion() && StringUtils.isEmpty(concurrencyControl)){
            populateForm(model);
            model.addAttribute("calificacion", calificacion);
            model.addAttribute("concurrency", true);
            return new ModelAndView("calificacions/edit");
        } else if(calificacion.getVersion() != existingCalificacion.getVersion() && "discard".equals(concurrencyControl)){
            populateForm(model);
            model.addAttribute("calificacion", existingCalificacion);
            model.addAttribute("concurrency", false);
            return new ModelAndView("calificacions/edit");
        } else if(calificacion.getVersion() != existingCalificacion.getVersion() && "apply".equals(concurrencyControl)){
            // Update the version field to be able to override the existing values
            calificacion.setVersion(existingCalificacion.getVersion());
        }
        Calificacion savedCalificacion = getCalificacionService().save(calificacion);
        UriComponents showURI = getItemLink().to(CalificacionsItemThymeleafLinkFactory.SHOW).with("calificacion", savedCalificacion.getId()).toUri();
        return new ModelAndView("redirect:" + showURI.toUriString());
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param calificacion
     * @return ResponseEntity
     */
    @ResponseBody
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> CalificacionsItemThymeleafController.delete(@ModelAttribute Calificacion calificacion) {
        getCalificacionService().delete(calificacion);
        return ResponseEntity.ok().build();
    }
    
}
