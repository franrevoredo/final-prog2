// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ar.edu.um.programacion2.oficios.service.impl;

import ar.edu.um.programacion2.oficios.reference.Historial;
import ar.edu.um.programacion2.oficios.repository.HistorialRepository;
import ar.edu.um.programacion2.oficios.service.impl.HistorialServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect HistorialServiceImpl_Roo_Service_Impl {
    
    declare @type: HistorialServiceImpl: @Service;
    
    declare @type: HistorialServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private HistorialRepository HistorialServiceImpl.historialRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param historialRepository
     */
    @Autowired
    public HistorialServiceImpl.new(HistorialRepository historialRepository) {
        setHistorialRepository(historialRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return HistorialRepository
     */
    public HistorialRepository HistorialServiceImpl.getHistorialRepository() {
        return historialRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param historialRepository
     */
    public void HistorialServiceImpl.setHistorialRepository(HistorialRepository historialRepository) {
        this.historialRepository = historialRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param historial
     */
    @Transactional
    public void HistorialServiceImpl.delete(Historial historial) {
        getHistorialRepository().delete(historial);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Historial> HistorialServiceImpl.save(Iterable<Historial> entities) {
        return getHistorialRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void HistorialServiceImpl.delete(Iterable<Long> ids) {
        List<Historial> toDelete = getHistorialRepository().findAll(ids);
        getHistorialRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Historial
     */
    @Transactional
    public Historial HistorialServiceImpl.save(Historial entity) {
        return getHistorialRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Historial
     */
    public Historial HistorialServiceImpl.findOne(Long id) {
        return getHistorialRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Historial
     */
    public Historial HistorialServiceImpl.findOneForUpdate(Long id) {
        return getHistorialRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Historial> HistorialServiceImpl.findAll(Iterable<Long> ids) {
        return getHistorialRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Historial> HistorialServiceImpl.findAll() {
        return getHistorialRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long HistorialServiceImpl.count() {
        return getHistorialRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Historial> HistorialServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getHistorialRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Historial> HistorialServiceImpl.getEntityType() {
        return Historial.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> HistorialServiceImpl.getIdType() {
        return Long.class;
    }
    
}
