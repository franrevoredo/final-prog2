// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ar.edu.um.programacion2.oficios.service.impl;

import ar.edu.um.programacion2.oficios.domain.Cliente;
import ar.edu.um.programacion2.oficios.repository.ClienteRepository;
import ar.edu.um.programacion2.oficios.service.impl.ClienteServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect ClienteServiceImpl_Roo_Service_Impl {
    
    declare @type: ClienteServiceImpl: @Service;
    
    declare @type: ClienteServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private ClienteRepository ClienteServiceImpl.clienteRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param clienteRepository
     */
    @Autowired
    public ClienteServiceImpl.new(ClienteRepository clienteRepository) {
        setClienteRepository(clienteRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return ClienteRepository
     */
    public ClienteRepository ClienteServiceImpl.getClienteRepository() {
        return clienteRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param clienteRepository
     */
    public void ClienteServiceImpl.setClienteRepository(ClienteRepository clienteRepository) {
        this.clienteRepository = clienteRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param cliente
     */
    @Transactional
    public void ClienteServiceImpl.delete(Cliente cliente) {
        getClienteRepository().delete(cliente);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Cliente> ClienteServiceImpl.save(Iterable<Cliente> entities) {
        return getClienteRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void ClienteServiceImpl.delete(Iterable<Long> ids) {
        List<Cliente> toDelete = getClienteRepository().findAll(ids);
        getClienteRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Cliente
     */
    @Transactional
    public Cliente ClienteServiceImpl.save(Cliente entity) {
        return getClienteRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Cliente
     */
    public Cliente ClienteServiceImpl.findOne(Long id) {
        return getClienteRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Cliente
     */
    public Cliente ClienteServiceImpl.findOneForUpdate(Long id) {
        return getClienteRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Cliente> ClienteServiceImpl.findAll(Iterable<Long> ids) {
        return getClienteRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Cliente> ClienteServiceImpl.findAll() {
        return getClienteRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long ClienteServiceImpl.count() {
        return getClienteRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Cliente> ClienteServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getClienteRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param username
     * @param pageable
     * @return Page
     */
    public Page<Cliente> ClienteServiceImpl.findByUsername(String username, Pageable pageable) {
        return getClienteRepository().findByUsername(username, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param email
     * @param pageable
     * @return Page
     */
    public Page<Cliente> ClienteServiceImpl.findByEmail(String email, Pageable pageable) {
        return getClienteRepository().findByEmail(email, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param username
     * @return Long
     */
    public long ClienteServiceImpl.countByUsername(String username) {
        return getClienteRepository().countByUsername(username);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param email
     * @return Long
     */
    public long ClienteServiceImpl.countByEmail(String email) {
        return getClienteRepository().countByEmail(email);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Cliente> ClienteServiceImpl.getEntityType() {
        return Cliente.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> ClienteServiceImpl.getIdType() {
        return Long.class;
    }
    
}
