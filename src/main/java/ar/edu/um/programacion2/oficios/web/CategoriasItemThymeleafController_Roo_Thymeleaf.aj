// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ar.edu.um.programacion2.oficios.web;

import ar.edu.um.programacion2.oficios.reference.Categoria;
import ar.edu.um.programacion2.oficios.service.api.CategoriaService;
import ar.edu.um.programacion2.oficios.web.CategoriasItemThymeleafController;
import ar.edu.um.programacion2.oficios.web.CategoriasItemThymeleafLinkFactory;
import io.springlets.web.NotFoundException;
import io.springlets.web.mvc.util.ControllerMethodLinkBuilderFactory;
import io.springlets.web.mvc.util.MethodLinkBuilderFactory;
import java.util.Locale;
import javax.validation.Valid;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.MessageSource;
import org.springframework.context.i18n.LocaleContextHolder;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.WebDataBinder;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.InitBinder;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.util.UriComponents;

privileged aspect CategoriasItemThymeleafController_Roo_Thymeleaf {
    
    declare @type: CategoriasItemThymeleafController: @Controller;
    
    declare @type: CategoriasItemThymeleafController: @RequestMapping(value = "/categorias/{categoria}", name = "CategoriasItemThymeleafController", produces = MediaType.TEXT_HTML_VALUE);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private MessageSource CategoriasItemThymeleafController.messageSource;
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private MethodLinkBuilderFactory<CategoriasItemThymeleafController> CategoriasItemThymeleafController.itemLink;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param categoriaService
     * @param messageSource
     * @param linkBuilder
     */
    @Autowired
    public CategoriasItemThymeleafController.new(CategoriaService categoriaService, MessageSource messageSource, ControllerMethodLinkBuilderFactory linkBuilder) {
        setCategoriaService(categoriaService);
        setMessageSource(messageSource);
        setItemLink(linkBuilder.of(CategoriasItemThymeleafController.class));
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return MessageSource
     */
    public MessageSource CategoriasItemThymeleafController.getMessageSource() {
        return messageSource;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param messageSource
     */
    public void CategoriasItemThymeleafController.setMessageSource(MessageSource messageSource) {
        this.messageSource = messageSource;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return MethodLinkBuilderFactory
     */
    public MethodLinkBuilderFactory<CategoriasItemThymeleafController> CategoriasItemThymeleafController.getItemLink() {
        return itemLink;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param itemLink
     */
    public void CategoriasItemThymeleafController.setItemLink(MethodLinkBuilderFactory<CategoriasItemThymeleafController> itemLink) {
        this.itemLink = itemLink;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @param locale
     * @param method
     * @return Categoria
     */
    @ModelAttribute
    public Categoria CategoriasItemThymeleafController.getCategoria(@PathVariable("categoria") Long id, Locale locale, HttpMethod method) {
        Categoria categoria = null;
        if (HttpMethod.PUT.equals(method)) {
            categoria = categoriaService.findOneForUpdate(id);
        } else {
            categoria = categoriaService.findOne(id);
        }
        
        if (categoria == null) {
            String message = messageSource.getMessage("error_NotFound", new Object[] {"Categoria", id}, "The record couldn't be found", locale);
            throw new NotFoundException(message);
        }
        return categoria;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param categoria
     * @param model
     * @return ModelAndView
     */
    @GetMapping(name = "show")
    public ModelAndView CategoriasItemThymeleafController.show(@ModelAttribute Categoria categoria, Model model) {
        model.addAttribute("categoria", categoria);
        return new ModelAndView("categorias/show");
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param categoria
     * @param model
     * @return ModelAndView
     */
    @GetMapping(value = "/inline", name = "showInline")
    public ModelAndView CategoriasItemThymeleafController.showInline(@ModelAttribute Categoria categoria, Model model) {
        model.addAttribute("categoria", categoria);
        return new ModelAndView("categorias/showInline :: inline-content");
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param dataBinder
     */
    @InitBinder("categoria")
    public void CategoriasItemThymeleafController.initCategoriaBinder(WebDataBinder dataBinder) {
        dataBinder.setDisallowedFields("id");
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param model
     */
    public void CategoriasItemThymeleafController.populateFormats(Model model) {
        model.addAttribute("application_locale", LocaleContextHolder.getLocale().getLanguage());
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param model
     */
    public void CategoriasItemThymeleafController.populateForm(Model model) {
        populateFormats(model);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param categoria
     * @param model
     * @return ModelAndView
     */
    @GetMapping(value = "/edit-form", name = "editForm")
    public ModelAndView CategoriasItemThymeleafController.editForm(@ModelAttribute Categoria categoria, Model model) {
        populateForm(model);
        
        model.addAttribute("categoria", categoria);
        return new ModelAndView("categorias/edit");
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param categoria
     * @param version
     * @param concurrencyControl
     * @param result
     * @param model
     * @return ModelAndView
     */
    @PutMapping(name = "update")
    public ModelAndView CategoriasItemThymeleafController.update(@Valid @ModelAttribute Categoria categoria, @RequestParam("version") Integer version, @RequestParam(value = "concurrency", required = false, defaultValue = "") String concurrencyControl, BindingResult result, Model model) {
        // Check if provided form contain errors
        if (result.hasErrors()) {
            populateForm(model);
            
            return new ModelAndView("categorias/edit");
        }
        // Concurrency control
        Categoria existingCategoria = getCategoriaService().findOne(categoria.getId());
        if(categoria.getVersion() != existingCategoria.getVersion() && StringUtils.isEmpty(concurrencyControl)){
            populateForm(model);
            model.addAttribute("categoria", categoria);
            model.addAttribute("concurrency", true);
            return new ModelAndView("categorias/edit");
        } else if(categoria.getVersion() != existingCategoria.getVersion() && "discard".equals(concurrencyControl)){
            populateForm(model);
            model.addAttribute("categoria", existingCategoria);
            model.addAttribute("concurrency", false);
            return new ModelAndView("categorias/edit");
        } else if(categoria.getVersion() != existingCategoria.getVersion() && "apply".equals(concurrencyControl)){
            // Update the version field to be able to override the existing values
            categoria.setVersion(existingCategoria.getVersion());
        }
        Categoria savedCategoria = getCategoriaService().save(categoria);
        UriComponents showURI = getItemLink().to(CategoriasItemThymeleafLinkFactory.SHOW).with("categoria", savedCategoria.getId()).toUri();
        return new ModelAndView("redirect:" + showURI.toUriString());
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param categoria
     * @return ResponseEntity
     */
    @ResponseBody
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> CategoriasItemThymeleafController.delete(@ModelAttribute Categoria categoria) {
        getCategoriaService().delete(categoria);
        return ResponseEntity.ok().build();
    }
    
}
