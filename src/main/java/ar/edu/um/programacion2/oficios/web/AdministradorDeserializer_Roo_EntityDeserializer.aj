// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ar.edu.um.programacion2.oficios.web;

import ar.edu.um.programacion2.oficios.domain.Administrador;
import ar.edu.um.programacion2.oficios.service.api.AdministradorService;
import ar.edu.um.programacion2.oficios.web.AdministradorDeserializer;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonNode;
import io.springlets.web.NotFoundException;
import java.io.IOException;
import org.springframework.boot.jackson.JsonComponent;
import org.springframework.core.convert.ConversionService;

privileged aspect AdministradorDeserializer_Roo_EntityDeserializer {
    
    declare @type: AdministradorDeserializer: @JsonComponent;
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return AdministradorService
     */
    public AdministradorService AdministradorDeserializer.getAdministradorService() {
        return administradorService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param administradorService
     */
    public void AdministradorDeserializer.setAdministradorService(AdministradorService administradorService) {
        this.administradorService = administradorService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return ConversionService
     */
    public ConversionService AdministradorDeserializer.getConversionService() {
        return conversionService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param conversionService
     */
    public void AdministradorDeserializer.setConversionService(ConversionService conversionService) {
        this.conversionService = conversionService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param jsonParser
     * @param context
     * @param codec
     * @param tree
     * @return Administrador
     * @throws IOException
     */
    public Administrador AdministradorDeserializer.deserializeObject(JsonParser jsonParser, DeserializationContext context, ObjectCodec codec, JsonNode tree) throws IOException {
        String idText = tree.asText();
        Long id = conversionService.convert(idText, Long.class);
        Administrador administrador = administradorService.findOne(id);
        if (administrador == null) {
            throw new NotFoundException("Administrador not found");
        }
        return administrador;
    }
    
}
