// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ar.edu.um.programacion2.oficios.service.impl;

import ar.edu.um.programacion2.oficios.reference.Categoria;
import ar.edu.um.programacion2.oficios.repository.CategoriaRepository;
import ar.edu.um.programacion2.oficios.service.impl.CategoriaServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect CategoriaServiceImpl_Roo_Service_Impl {
    
    declare @type: CategoriaServiceImpl: @Service;
    
    declare @type: CategoriaServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private CategoriaRepository CategoriaServiceImpl.categoriaRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param categoriaRepository
     */
    @Autowired
    public CategoriaServiceImpl.new(CategoriaRepository categoriaRepository) {
        setCategoriaRepository(categoriaRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return CategoriaRepository
     */
    public CategoriaRepository CategoriaServiceImpl.getCategoriaRepository() {
        return categoriaRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param categoriaRepository
     */
    public void CategoriaServiceImpl.setCategoriaRepository(CategoriaRepository categoriaRepository) {
        this.categoriaRepository = categoriaRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param categoria
     */
    @Transactional
    public void CategoriaServiceImpl.delete(Categoria categoria) {
        getCategoriaRepository().delete(categoria);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Categoria> CategoriaServiceImpl.save(Iterable<Categoria> entities) {
        return getCategoriaRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void CategoriaServiceImpl.delete(Iterable<Long> ids) {
        List<Categoria> toDelete = getCategoriaRepository().findAll(ids);
        getCategoriaRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Categoria
     */
    @Transactional
    public Categoria CategoriaServiceImpl.save(Categoria entity) {
        return getCategoriaRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Categoria
     */
    public Categoria CategoriaServiceImpl.findOne(Long id) {
        return getCategoriaRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Categoria
     */
    public Categoria CategoriaServiceImpl.findOneForUpdate(Long id) {
        return getCategoriaRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Categoria> CategoriaServiceImpl.findAll(Iterable<Long> ids) {
        return getCategoriaRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Categoria> CategoriaServiceImpl.findAll() {
        return getCategoriaRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long CategoriaServiceImpl.count() {
        return getCategoriaRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Categoria> CategoriaServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getCategoriaRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Categoria> CategoriaServiceImpl.getEntityType() {
        return Categoria.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> CategoriaServiceImpl.getIdType() {
        return Long.class;
    }
    
}
