// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ar.edu.um.programacion2.oficios.repository;

import ar.edu.um.programacion2.oficios.reference.Persona;
import ar.edu.um.programacion2.oficios.reference.QPersona;
import ar.edu.um.programacion2.oficios.repository.PersonaRepositoryCustom;
import ar.edu.um.programacion2.oficios.repository.PersonaRepositoryImpl;
import com.querydsl.core.types.Path;
import com.querydsl.jpa.JPQLQuery;
import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.jpa.repository.support.QueryDslRepositorySupportExt.AttributeMappingBuilder;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.transaction.annotation.Transactional;

privileged aspect PersonaRepositoryImpl_Roo_Jpa_Repository_Impl {
    
    declare parents: PersonaRepositoryImpl implements PersonaRepositoryCustom;
    
    declare @type: PersonaRepositoryImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String PersonaRepositoryImpl.USERNAME = "username";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String PersonaRepositoryImpl.PASSWORD = "password";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String PersonaRepositoryImpl.EMAIL = "email";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String PersonaRepositoryImpl.TELEFONO = "telefono";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String PersonaRepositoryImpl.ENABLED = "enabled";
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Persona> PersonaRepositoryImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        
        QPersona persona = QPersona.persona;
        
        JPQLQuery<Persona> query = from(persona);
        
        Path<?>[] paths = new Path<?>[] {persona.username,persona.password,persona.email,persona.telefono,persona.enabled};        
        applyGlobalSearch(globalSearch, query, paths);
        
        AttributeMappingBuilder mapping = buildMapper()
			.map(USERNAME, persona.username)
			.map(PASSWORD, persona.password)
			.map(EMAIL, persona.email)
			.map(TELEFONO, persona.telefono)
			.map(ENABLED, persona.enabled);
        
        applyPagination(pageable, query, mapping);
        applyOrderById(query);
        
        return loadPage(query, pageable, persona);
    }
    
}
