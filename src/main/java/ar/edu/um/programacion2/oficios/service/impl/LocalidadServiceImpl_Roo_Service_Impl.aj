// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ar.edu.um.programacion2.oficios.service.impl;

import ar.edu.um.programacion2.oficios.reference.Localidad;
import ar.edu.um.programacion2.oficios.repository.LocalidadRepository;
import ar.edu.um.programacion2.oficios.service.impl.LocalidadServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect LocalidadServiceImpl_Roo_Service_Impl {
    
    declare @type: LocalidadServiceImpl: @Service;
    
    declare @type: LocalidadServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private LocalidadRepository LocalidadServiceImpl.localidadRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param localidadRepository
     */
    @Autowired
    public LocalidadServiceImpl.new(LocalidadRepository localidadRepository) {
        setLocalidadRepository(localidadRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return LocalidadRepository
     */
    public LocalidadRepository LocalidadServiceImpl.getLocalidadRepository() {
        return localidadRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param localidadRepository
     */
    public void LocalidadServiceImpl.setLocalidadRepository(LocalidadRepository localidadRepository) {
        this.localidadRepository = localidadRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param localidad
     */
    @Transactional
    public void LocalidadServiceImpl.delete(Localidad localidad) {
        getLocalidadRepository().delete(localidad);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Localidad> LocalidadServiceImpl.save(Iterable<Localidad> entities) {
        return getLocalidadRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void LocalidadServiceImpl.delete(Iterable<Long> ids) {
        List<Localidad> toDelete = getLocalidadRepository().findAll(ids);
        getLocalidadRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Localidad
     */
    @Transactional
    public Localidad LocalidadServiceImpl.save(Localidad entity) {
        return getLocalidadRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Localidad
     */
    public Localidad LocalidadServiceImpl.findOne(Long id) {
        return getLocalidadRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Localidad
     */
    public Localidad LocalidadServiceImpl.findOneForUpdate(Long id) {
        return getLocalidadRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Localidad> LocalidadServiceImpl.findAll(Iterable<Long> ids) {
        return getLocalidadRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Localidad> LocalidadServiceImpl.findAll() {
        return getLocalidadRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long LocalidadServiceImpl.count() {
        return getLocalidadRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Localidad> LocalidadServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getLocalidadRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Localidad> LocalidadServiceImpl.getEntityType() {
        return Localidad.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> LocalidadServiceImpl.getIdType() {
        return Long.class;
    }
    
}
